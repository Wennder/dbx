<?php
/**
 * @title: Fachmodell Exploit
 * @version:0.1
 * @autor: js-helper
 * @desc:  in dieser Klasse werden die fachlichen Anforderungen und erforderlichen Funktionen 
 * 		   eines Exploits gekapselt. Der content kann mit syntax highlighning ausgegeben werden
 * @todo:  Autor als Referenz auf einen Benutzer ausgeben?
 */
/***UML***/
#category;
#date //unixtimestamp;
#verify //boolean;
#hits ;
#platform;
#autor;
#codeLanguage //geshi;
#title
#content
/***UML***/

class Exploit extends Dbhelper{
	/**Attributes**/

	protected $category;
	protected $date ;
	protected $verified;	
	protected $hits ;	
	protected $autor;
	protected $codeLanguage ;
	protected $title;
	protected $content;
	/**__construct()**/

	public function __construct(){
		$this->date=getdate();
		$this->hits=0;
	/*	$this->category= $category;
		$this->date = $date ;
		$this->verify = $verify ;
		$this->count = $count ;
		$this->platform= $platform;
		$this->autor= $autor;
		$this->codeLanguage = $codeLanguage ;*/
	}//__construct

	
	
	public function getFormatedCode(){
		$geshi = & new GeSHi($this->content(), 'php');		
		return  $geshi->parse_code();

	}
	
	
	/**SetGetter**/
	public function date ($date =""){ 
		if (empty($date )){		
			return  date("j, n, Y", $this->date[0]);                      						 
		}else{
			$this->date =$date ; 
		} 
	}//date
	
	/**
	 * 
	 * erhoeht die hits um 1. Sollte immer aufgerufen werden, wenn der Exploit angezeigt wird
	 */
	public function hits(){return $this->hits+=1;}	//Ausgabe Klicks	
	public function category($category=""){ if (empty($category)){return $this->category; }else{$this->category=$category; } }	
	public function verified($verified=""){ if (empty($verified)){return $this->verified; }else{$this->verified=$verified; } }
	public function autor($autor=""){ if (empty($autor)){return $this->autor; }else{$this->autor=$autor; } }
	public function codeLanguage ($codeLanguage =""){ if (empty($codeLanguage )){return $this->codeLanguage ; }else{$this->codeLanguage =$codeLanguage ; } }
	public function title($title=""){ if (empty($title)){return $this->title; }else{$this->title=$title; } }
	public function content($content=""){ if (empty($content)){return $this->content; }else{$this->content=$content; } }
	
	
	/**SetGetter**/
	
	
	public function __toString(){
		$retval="\n";
		$retval.="title {$this->title()}\n";
		$retval.="category: {$this->category()}\n";
		$retval.="date: {$this->date()}\n";
		$retval.="verify:{$this->verify()}\n";
		$retval.="count:{$this->count()}\n";
		$retval.="autor:{$this->autor()}\n";
		$retval.="code:{$this->codeLanguage}";
		
		
		
		
		return $retval;
	}
}//class


?>